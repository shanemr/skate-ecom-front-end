[{"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\index.js":"1","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\reportWebVitals.js":"2","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\App.js":"3","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Store\\Store.js":"4","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Cart.js":"5","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Home.js":"6","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Header.js":"7","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\ProductPage.js":"8","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\MainReducer.js":"9","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\CartProduct.js":"10","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\DropDown.js":"11","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\ShopCard.js":"12","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Sort.js":"13","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Product.js":"14","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\ProductCard.js":"15","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\ProductReducer.js":"16","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Actions\\Actions.js":"17","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\CartReducer.js":"18","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\PopUp.js":"19","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Checkout.js":"20","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\ItemSummary.js":"21","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\CheckoutForm.js":"22","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\PaymentForm.js":"23","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\CheckoutFormReducer.js":"24","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Login.js":"25","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\AuthReducer.js":"26","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\UserProfile.js":"27"},{"size":678,"mtime":1679780362607,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1679780362607,"results":"30","hashOfConfig":"29"},{"size":1458,"mtime":1692378498566,"results":"31","hashOfConfig":"29"},{"size":222,"mtime":1679780362604,"results":"32","hashOfConfig":"29"},{"size":5215,"mtime":1684524303821,"results":"33","hashOfConfig":"29"},{"size":2464,"mtime":1682630546726,"results":"34","hashOfConfig":"29"},{"size":4811,"mtime":1684521453385,"results":"35","hashOfConfig":"29"},{"size":4173,"mtime":1690579798647,"results":"36","hashOfConfig":"29"},{"size":374,"mtime":1690565473752,"results":"37","hashOfConfig":"29"},{"size":2670,"mtime":1683749184723,"results":"38","hashOfConfig":"29"},{"size":1535,"mtime":1682631137959,"results":"39","hashOfConfig":"29"},{"size":686,"mtime":1682637397270,"results":"40","hashOfConfig":"29"},{"size":4049,"mtime":1683231906426,"results":"41","hashOfConfig":"29"},{"size":365,"mtime":1679786879851,"results":"42","hashOfConfig":"29"},{"size":1456,"mtime":1683563634580,"results":"43","hashOfConfig":"29"},{"size":573,"mtime":1683737452793,"results":"44","hashOfConfig":"29"},{"size":2601,"mtime":1692375835500,"results":"45","hashOfConfig":"29"},{"size":3136,"mtime":1684525895760,"results":"46","hashOfConfig":"29"},{"size":4652,"mtime":1683583710353,"results":"47","hashOfConfig":"29"},{"size":9555,"mtime":1683748417550,"results":"48","hashOfConfig":"29"},{"size":529,"mtime":1683662384090,"results":"49","hashOfConfig":"29"},{"size":9247,"mtime":1683752196305,"results":"50","hashOfConfig":"29"},{"size":2618,"mtime":1683729869579,"results":"51","hashOfConfig":"29"},{"size":712,"mtime":1683737215668,"results":"52","hashOfConfig":"29"},{"size":1586,"mtime":1692372553516,"results":"53","hashOfConfig":"29"},{"size":271,"mtime":1690566265153,"results":"54","hashOfConfig":"29"},{"size":589,"mtime":1692384219538,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"hqvtx0",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"59"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"59"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"59"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\index.js",[],[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\reportWebVitals.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\App.js",["147","148"],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Store\\Store.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Cart.js",["149","150","151"],[],"import { React } from \"react\";\r\nimport { Button, Table, InputGroup, InputGroupAddon, Input} from \"reactstrap\";\r\nimport CartProduct from \"./CartProduct\";\r\nimport '../Styles/Cart.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction Cart(props){\r\n    const numCartItems = useSelector((state) => state.CartReducer.numItemsInCart);\r\n    const cartItems = useSelector((state) => state.CartReducer.cartItems);\r\n    const total = useSelector((state) => state.CartReducer.total);\r\n    const nav = useNavigate();\r\n    const leftArrow = '/images/left-arrow.png';\r\n    const leftArrowWhite = '/images/left-arrow-white.png';\r\n    const rightArrow = '/images/right-arrow.png';\r\n    \r\n    const handleCheckoutButton = () =>{\r\n        nav('/checkout');\r\n    }\r\n\r\n    const handleKeepShopingBtn = () => {\r\n        nav(-1 !== '/login' ? -1 : '/cart');\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className='cart-container'>\r\n            <div className='cart-box' id='first-div'>\r\n                {cartItems.length >= 1 ? \r\n                <div className='cart-headers'>\r\n                    <div className='cart-header'>\r\n                    <h2>Cart Summary {'('}{numCartItems}{')'}</h2>\r\n                    <Button color='none' className='keep-shopping-btn' onClick={handleKeepShopingBtn}>\r\n                        <img className='left-arrow' src={leftArrow} alt='left arrow'/>\r\n                        Keep Shopping\r\n                    </Button>\r\n                    </div>\r\n                    <div className='cart-items-container'>\r\n                        <Table borderless>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{width:'20%'}}>\r\n                                        Product\r\n                                    </th>\r\n                                    <th style={{width:'20%'}}>\r\n                                        Price\r\n                                    </th>\r\n                                    <th style={{width:'20%'}}>\r\n                                        Quantity\r\n                                    </th>\r\n                                    <th style={{width:'20%'}}>\r\n                                        Subtotal\r\n                                    </th>\r\n                                    <th style={{width:'20%'}}></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {cartItems.length >= 1 ? \r\n                                cartItems.map(p =>{\r\n                                    return(\r\n                                        <CartProduct key={p.brandId} product={p}/>\r\n                                    )\r\n                                    })\r\n                                    : null}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                            \r\n                </div>\r\n                    : \r\n                <div className='empty-cart'>\r\n                <h2 style={{alignSelf:'center', justifySelf:'center', marginTop:'20%'}}>Your cart is empty!</h2>\r\n                <Button color='none' className='keep-shopping-btn' style={{alignSelf:'center',color:'white', backgroundColor:'black'}} onClick={handleKeepShopingBtn}>\r\n                        <img className='left-arrow' src={leftArrowWhite} alt='left arrow'/>\r\n                         Keep Shopping\r\n                </Button>\r\n                </div>\r\n                }\r\n            </div>\r\n            {cartItems.length >= 1 ? \r\n            <div className=\"check-out\" id='second-div'>\r\n                <h4 style={{marginBottom:'10%', borderBottom:'2px solid black', width:'60%', padding:'2%'}}>Order Summary</h4>\r\n                <span style={{marginBottom:'10%'}}>Shipping and taxes calculated at check out</span>\r\n                <p style={{width:'120%'}}>------------------ \r\n                   <span style={{fontWeight:'bold'}}>{' Discount Code '}</span> \r\n                ------------------</p>\r\n                <div style={{display:'flex', alignItems:'center', justifyContent:'center',hieght:'100%', gap:'1%', marginBottom:'5%'}}>\r\n                    <Input placeholder=\"Enter code\"  style={{width:'60%'}}/>\r\n                    <Button style={{display:'block',color:'white', backgroundColor:'black', width:'40%', fontWeight:'bold', padding:'2%'}}>Apply</Button>\r\n               </div> \r\n                <p className='order-total-tag' >\r\n                    --------------------<span style={{fontWeight:'bold'}}>{' Cart Total '}</span>--------------------\r\n                </p>\r\n                <p style={{fontWeight:'bold'}}>${total.toFixed(2)}</p>\r\n                <div className='button-container'>\r\n                    <Button color='warning' className='check-out-btn' onClick={handleCheckoutButton}>\r\n                        Secure Checkout\r\n                        <img className='right-arrow' src={rightArrow} alt='right arrow'/>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Home.js",["152"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport '../Styles/Home.css'\r\nimport ShopCard from \"./ShopCard\";\r\n\r\n\r\nfunction Home(){\r\n    const[cardDetails, setCardDetails] = useState([\r\n        {\r\n            title: 'Decks',\r\n            description: `Lorem ipsum dolor sit amet, \r\n                        consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore \r\n                        et dolore magna aliqua.`,\r\n            image: 'images/decks/decks.jpg'\r\n        },\r\n        {\r\n            title: 'Trucks',\r\n            description: `Lorem ipsum dolor sit amet, \r\n                        consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore \r\n                        et dolore magna aliqua. Non arcu risus quis varius.`,\r\n             image: 'images/trucks/trucks.jpg'\r\n        },\r\n        {\r\n            title: 'Wheels',\r\n            description: `Lorem ipsum dolor sit amet, \r\n                        consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore \r\n                        et dolore magna aliqua. Non arcu risus quis varius.`,\r\n            image: 'images/wheels/wheelsTwo.jpg'\r\n        },\r\n        {\r\n            title: 'Bearings',\r\n            description: `Lorem ipsum dolor sit amet, \r\n                        consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore \r\n                        et dolore magna aliqua.`,\r\n            image: 'images/bearings/bearingsTwo.jpg'\r\n        }\r\n    ])\r\n    return(\r\n        <div className=\"home-container\">\r\n            {/* <div className='intro-header'>\r\n                <h1>Home</h1>\r\n            </div> */}\r\n            <div className=\"image-container\">\r\n                <h1 className=\"slogan\" style={{marginTop:'10%'}}>Ride with style,</h1>\r\n                {/* <span style={{marginLeft:'15%', justifySelf:'center', fontSize:'3em', color:'white'}}>and</span> */}\r\n                <h1 className=\"slogan\">shop with ease</h1>\r\n            </div>\r\n            <h3 className='card-header'>Shop Skate Supplies</h3>\r\n            \r\n            <div className=\"cards-container\"> \r\n                {cardDetails ? \r\n                    cardDetails.map(card =>{\r\n                        return(\r\n                            <ShopCard key={card.title} detail={card}/>\r\n                        )\r\n                    })\r\n                : null}\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Header.js",["153","154","155","156"],[],"import React from 'react'\r\nimport { Outlet , Link} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { Input, Button} from 'reactstrap';\r\nimport { Badge } from '@mui/material';\r\nimport DropDown from './DropDown';\r\nimport '../Styles/Header.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllProductBrandNames } from '../Actions/Actions';\r\nimport { icons } from 'react-icons';\r\n\r\nfunction Header(){\r\n    const[search, setSearch]= useState('')\r\n    const dispatch = useDispatch()\r\n    const cartItems = useSelector((state) => state.CartReducer.numItemsInCart);\r\n   \r\n    \r\n    let products = useSelector(state => state.ProductReducer.brands);\r\n    \r\n    useEffect(() =>{\r\n        dispatch(getAllProductBrandNames())\r\n        \r\n    },[])\r\n\r\n    let skateCategories = ['SkateBoard Completes','SkateBoard Decks', 'Trucks', 'Wheels', 'Bearings', 'Hardware']\r\n\r\n    let clothingCategories = ['Shirts', 'Hoodies', 'Pants', 'Shorts']\r\n\r\n    let shoesCategories = ['Sneakers', 'Boots', \"Sandals\", \"Slip-Ons\"]\r\n\r\n    let accesories = ['Hats', 'Beanies', 'Socks']\r\n   \r\n    return(\r\n        <div>\r\n            <p className='header-tag'>~ Free shipping on orders over $100.00! ~</p>\r\n            <div className='header-bar'>\r\n                {products ?\r\n                    <ul className='header-bar-list-left'>\r\n                        <Link to='/' style={{textDecoration:'none'}}>\r\n                            <h1 className='logo'><span style={{borderBottom:'2px solid gold', paddingBottom:'2%'}}>Skate-Ecom</span> :|:</h1>\r\n                            {/* <h1 className='logo'>Skate-Ecom <span style={{color:'gold'}}>:</span>|<span style={{color:'gold'}}>:</span></h1> */}\r\n                        </Link>                    \r\n                        <li className='header-bar-item'>\r\n                            <DropDown type={'Skate'} items={skateCategories}/>\r\n                        </li>\r\n                        <li className='header-bar-item'>\r\n                            <DropDown type={'Clothing'} items={clothingCategories}/>\r\n                        </li>\r\n                        <li className='header-bar-item'>\r\n                            <DropDown type={'Shoes'} items={shoesCategories}/>\r\n                        </li>\r\n                        <li className='header-bar-item'>\r\n                            <DropDown type={'Accesories'} items={accesories}/>\r\n                        </li>\r\n                        <li className='header-bar-item search-box'>\r\n                            <Input type='search'  placeholder='What are you looking for?'>\r\n\r\n                            </Input>\r\n                        </li>\r\n                    </ul>\r\n                : null}\r\n                <ul className='header-bar-list-right'>\r\n                    <li className='header-bar-item' >\r\n                        <Link to='/cart' className='login-cart'>                            \r\n                            <Badge color='error' badgeContent={cartItems} anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                            }} overlap='rectangular'><span style={{margin:'5%'}}>Cart</span></Badge>   \r\n                        </Link>\r\n                    </li>\r\n                    <li className='header-bar-item'>\r\n                        <Link  to='login' className='login-cart'>Login</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <Outlet/>\r\n            </div>\r\n            <div className='footer'>\r\n                <ul className='footer-list'>\r\n                    <li className='footer-list-header'>Get Help</li>\r\n                    <li className='footer-item'>Customer Service</li>\r\n                    <li className='footer-item'>Order Status</li>\r\n                    <li className='footer-item'>Subscription</li>\r\n                </ul>\r\n                <ul className='footer-list'>\r\n                    <li className='footer-list-header'>About Us</li>\r\n                    <li className='footer-item'>Contact Us</li>\r\n                    <li className='footer-item'>Our Story</li>\r\n                    <li className='footer-item'>News Letter</li>\r\n                </ul>\r\n                <div className='subscribe-container'>\r\n                    <div className='subscribe-text'>\r\n                        <p>Subscribe to our news letter</p>\r\n                    </div>\r\n                    <div className='subscribe'>\r\n                        <Input type='email' placeholder='Enter email...'></Input>\r\n                        <Button color='warning'>Subscribe</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\ProductPage.js",["157"],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\MainReducer.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\CartProduct.js",["158","159"],[],"import React, {useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { addToCart, removeAllFromCart, removeFromCart} from \"../Actions/Actions\";\r\n\r\nimport '../Styles/CartProduct.css'\r\n\r\nfunction CartProduct({product}){\r\n    const dispatch = useDispatch();\r\n    const[dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n    const[quantity, setQuantity] = useState(product.purchaseQuantity);\r\n\r\n    \r\n   const handleIncrease = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(addToCart(product, 1))\r\n        \r\n    }\r\n\r\n    const handleDecrease = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(removeFromCart(product))\r\n        \r\n    }\r\n\r\n    function removeAllProductFromCart(event){\r\n        event.preventDefault();\r\n        dispatch(removeAllFromCart(product))\r\n    }\r\n\r\n    const handleProductAmountChange = (e) =>{\r\n        e.preventDefault();\r\n        if(e.target.value > product.purchaseQuantity){\r\n            handleIncrease(e);\r\n            setQuantity(product.purchaseQuantity + 1);\r\n        } else{\r\n            handleDecrease(e);\r\n            setQuantity(product.purchaseQuantity - 1);\r\n        }\r\n    }\r\n\r\n    \r\n    return(\r\n        <tr className='cart-product-container' >\r\n            <td className='product-container'>\r\n                \r\n                    <img className='product-image' src={product.imageUrl} alt='product'/>\r\n                    { product.truckType ? <span >{product.brandName + ' - '  + product.truckType}</span>: null}\r\n                    { product.bearingsType ? <span>{product.brandName + ' - '  + product.bearingsType}</span>: null}\r\n                    { product.brandId.match(/(Wheels)/g) ? <span>{product.brandName + ' - ' + product.size + '\"'}</span>: null}\r\n                    { product.color ? <span>{product.brandName + ' - '  + product.size + '\"'}</span>: null}\r\n                \r\n            </td>\r\n            <td>\r\n                <p className='product-price'>{\"$\"+product.price}</p>\r\n            </td>\r\n            <td>\r\n                <Input type='number' className='quantity-dropdown' value={quantity} onChange={handleProductAmountChange}>{product.purchaseQuantity}</Input>\r\n            </td>\r\n            <td>\r\n                <p className='product-price'>{'$' + product.price * product.purchaseQuantity}</p>\r\n            </td>\r\n            <td>\r\n                <Button className='remove-product'color='danger' onClick={removeAllProductFromCart}>Remove</Button>\r\n            </td>\r\n            \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CartProduct;","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\DropDown.js",["160","161"],[],"import React from \"react\"\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Dropdown,DropdownMenu, DropdownItem, DropdownToggle} from 'reactstrap';\r\nimport '../Styles/Header.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DropDown = (props) =>{\r\n    const[dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n    const[dropDownItems, setDropDownItems] = useState(props.items)\r\n    const nav = useNavigate();\r\n\r\n\r\n    function handleNav(item) {\r\n      console.log(item)\r\n      if(item === \"SkateBoard Decks\"){\r\n        item = \"Decks\"\r\n      }\r\n      \r\n      nav('/products/' + item );\r\n    }\r\n\r\n    console.log(props.items);\r\n    \r\n    return(\r\n      <div>\r\n      <Dropdown key={props.type} className='dropdown' isOpen={dropdownOpen} toggle={toggle} direction={\"down\"}>\r\n        <DropdownToggle className=\"dropdown-title\" color='none'>{props.type}</DropdownToggle>\r\n        <DropdownMenu style={{width:'300px'}}>\r\n            <DropdownItem header key={'header'}>------Categories------</DropdownItem>\r\n            { dropDownItems ? \r\n                dropDownItems.map( item => {\r\n                    return(\r\n                        <DropdownItem  key={item}className='header-bar-item-dropdown' onClick={() => handleNav(item)}>{item}</DropdownItem>\r\n                    ) \r\n                })\r\n            : null}\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    </div>\r\n    \r\n    )\r\n  }\r\n\r\n  export default DropDown;","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\ShopCard.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Sort.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Product.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\ProductCard.js",["162","163","164","165","166"],[],"import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport '../Styles/ProductCard.css'\r\nimport {addToCart} from '../Actions/Actions'\r\nimport { useDispatch } from 'react-redux';\r\nimport PopUp from './PopUp';\r\nimport { useState } from 'react';\r\n\r\nfunction ProductCard({product, handlePopUp, getProductInfo}){\r\n    let params = useParams()\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const handleView =(event) =>{\r\n        event.preventDefault();\r\n       \r\n        handlePopUp(true);\r\n        getProductInfo(product);\r\n    }\r\n\r\n   \r\n\r\n   \r\n    return(\r\n        <div key={product.id} className='product-card-container product' onClick={handleView}>\r\n            <div className='product-image-container'>\r\n                <img src={product.imageUrl} alt={product.brandName}  className={params.type.toLocaleLowerCase() + '-product-image'}/>\r\n            </div>\r\n            <div>\r\n                <span>{product.brandName} - {product.size ? product.size + \"\\\"\" \r\n                                            : product.truckType ?  product.truckType \r\n                                            : product.bearingsType ? product.bearingsType\r\n                                            : null}</span>\r\n                <br/>\r\n                <span style={{fontWeight:'bold'}}>${product.price.toFixed(2)}</span> \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductCard;","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\ProductReducer.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Actions\\Actions.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\CartReducer.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\PopUp.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Checkout.js",["167","168","169","170"],[],"import React from 'react'\r\nimport \"../Styles/Checkout.css\"\r\nimport {Form, FormGroup, Input,Progress, Label, Button } from 'reactstrap';\r\nimport CheckoutForm from './CheckoutForm';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport ItemSummary from './ItemSummary';\r\nimport PaymentForm from './PaymentForm';\r\n\r\nfunction Checkout(){\r\n\r\n    const cartItems = useSelector((state) => state.CartReducer.cartItems);\r\n    const total = useSelector((state) => state.CartReducer.total);\r\n    const formData = useSelector((formState) => formState.CheckoutFormReducer.shipping);\r\n    \r\n    const[checkoutTotal,setCheckoutTotal] = useState(0);\r\n    const[shipBillSame, setShipBillSame] = useState(false);\r\n    const[shippingCost, setShippingCost] = useState(0)\r\n    const[taxes, setTaxes] = useState(0);\r\n    const[nextForm, setNextForm] = useState('Customer');\r\n    const[checkoutProgress, setCheckoutProgress] = useState({\r\n        customer:2,\r\n        billing: 0,\r\n        payment: 0,\r\n        shipping: 0,\r\n        progressTotal: function(){\r\n            let total = this.customer + this.billing + this.payment + this.shipping;\r\n            return total;\r\n        }\r\n    });\r\n\r\n    const handleNextForm = (formType, e) =>{\r\n        \r\n        switch (formType) {\r\n            case 'Customer':\r\n                console.log('CUSTOMER TYPE')\r\n                    if(shipBillSame){\r\n                        setCheckoutProgress({...checkoutProgress, billing: 25});\r\n                        setNextForm('Shipping')\r\n                    } else{\r\n                        setNextForm('Billing');\r\n                    }\r\n                break;\r\n            case 'Billing':\r\n                setNextForm('Shipping');\r\n                break;\r\n            case 'Shipping':\r\n                setNextForm('Payment')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleBackForm = (fromType) =>{\r\n        let forms = ['Customer','Billing','Shipping','Payment']\r\n        switch (fromType) {\r\n            case 'Customer':\r\n                    setNextForm('Customer'); \r\n                    break;\r\n            case 'Billing':\r\n                    setNextForm('Customer');\r\n                    break;\r\n            case 'Shipping':\r\n                    setNextForm('Billing');\r\n                    break;\r\n            case 'Payment':\r\n                    setNextForm('Shipping');\r\n                    break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    const updateShippingCost = (e) =>{\r\n        setShippingCost(Number(e.target.value));\r\n        handleProgressBar(\"Shipping\");\r\n    }\r\n\r\n    \r\n    const handleCheckBillSame = (e) =>{\r\n        setShipBillSame(!shipBillSame);    \r\n        console.log('Ship Bill Same', shipBillSame);\r\n    }\r\n        \r\n\r\n    const updateTotalAtCheckout = () =>{\r\n        setCheckoutTotal(total + shippingCost + taxes);\r\n    }\r\n\r\n    useEffect(() =>{\r\n        setTaxes(total * 0.0825)\r\n    },[cartItems])\r\n\r\n    useEffect(() =>{\r\n        updateTotalAtCheckout();\r\n    },[total,taxes,shippingCost])\r\n\r\n\r\n    \r\n    const handleProgressBar = (progressType, isVal) =>{\r\n        console.log(checkoutProgress.progressTotal())\r\n            switch (progressType){\r\n                case 'Customer':\r\n                    if(checkoutProgress.customer < 25 && isVal){\r\n                        setCheckoutProgress({...checkoutProgress, customer: checkoutProgress.customer + 23});\r\n                    }\r\n                    if(checkoutProgress.customer === 25 && !isVal){\r\n                        setCheckoutProgress({...checkoutProgress, customer: 2});\r\n                    }\r\n                    break;\r\n                case 'Billing':\r\n                    console.log(\"Billing\");\r\n                    console.log(isVal)\r\n                    if(checkoutProgress.billing < 25 && isVal){\r\n                        console.log(\"Billing SET TO 25\");\r\n                            setCheckoutProgress({...checkoutProgress, billing: checkoutProgress.billing + 25});\r\n                    }\r\n                    if(checkoutProgress.billing === 25 && !isVal){\r\n                        console.log(\"Billing SET TO 0\");\r\n                        setCheckoutProgress({...checkoutProgress, billing: 0});\r\n                    } break;\r\n                case 'Shipping':\r\n                    console.log(\"SHIPPING\");\r\n                    if(checkoutProgress.shipping < 25){\r\n                        setCheckoutProgress({...checkoutProgress, shipping: checkoutProgress.shipping + 25});\r\n                    }\r\n                    \r\n                    break;\r\n                default:\r\n                    break;    \r\n            }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='checkout-container'>\r\n            \r\n            <div className='form-container' style={{backgroundColor:''}}>\r\n                <div className=\"progress-container\">\r\n                    <div className='progress-steps'>\r\n                        <h5 style={{alignSelf:'flex-start', marginLeft:'5%'}}>1. Customer</h5>\r\n                        <h5 style={{alignSelf:'center', marginLeft:'5%'}}>2. Billing</h5>\r\n                        <h5 style={{alignSelf:'flex-end', marginLeft:'5%'}}>3. Shipping</h5>\r\n                        <h5 style={{alignSelf:'flex-end', marginLeft:'5%'}}>4. Payment</h5>\r\n                    </div>\r\n                    <Progress multi  style={{width:'90%'}}>\r\n                        <Progress bar value={checkoutProgress.customer} style={{textAlign:'center', fontWeight:'bold', width:'10%'}}></Progress>\r\n                        <Progress bar value={checkoutProgress.billing} style={{textAlign:'center', fontWeight:'bold'}}></Progress>\r\n                        <Progress bar value={checkoutProgress.shipping} style={{textAlign:'center', fontWeight:'bold'}}></Progress>\r\n                        <Progress bar value={checkoutProgress.payment} style={{textAlign:'center', fontWeight:'bold'}}></Progress>\r\n                    </Progress>\r\n                </div>\r\n                <div className='form-group'>\r\n                    {nextForm === 'Customer' ? <CheckoutForm type={\"Customer\"}  shipBillSame={shipBillSame} handleNextForm={handleNextForm} handleCheckBillSame={handleCheckBillSame} handleProgressBar={handleProgressBar} />\r\n                    : nextForm === 'Billing' ? <CheckoutForm type={\"Billing\"} formData={shipBillSame ? formData : null} handleNextForm={handleNextForm} handleProgressBar={handleProgressBar} />\r\n                    : nextForm === 'Shipping' ?  <div id='shipping-info-container'>\r\n                    <h2>Shipping</h2>\r\n                    <Form >\r\n                        <FormGroup>\r\n                            <Input id='reg-shipping' type='radio' value={0.00} name='shipping' style={{marginRight:'2%'}} onChange={updateShippingCost}></Input>\r\n                            <Label for='reg-shipping'>Regular Shipping: 3 - 5 business days - <span style={{fontWeight:'bold'}}>{'(Free)'}</span></Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input id='express-shipping'type='radio' value={12.00}name='shipping' style={{marginRight:'2%'}} onChange={updateShippingCost}></Input>\r\n                            <Label for='express-shipping'>Express Shipping: 1 - 2 business days - <span style={{fontWeight:'bold'}}>{'($12.00)'}</span></Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input  id='overnight-shipping' type='radio' value={25.00}name='shipping' style={{marginRight:'2%'}} onChange={updateShippingCost}></Input>\r\n                            <Label for='overnight-shipping'>Overnight Shipping: 1 business day - <span style={{fontWeight:'bold'}}>{'($25.00)'}</span></Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Button onClick={e => handleNextForm(\"Shipping\", e)}>Next</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                    : nextForm === 'Payment' ?  <PaymentForm progressTotal={checkoutProgress.progressTotal()}></PaymentForm>\r\n                    : null}  \r\n                </div>\r\n            </div>\r\n            <div className='summary-container'>\r\n                <div className='summary-details'>\r\n                    <h3>Order Summary</h3>\r\n                    <p>Shipping and Taxes</p>\r\n                    <ul id='checkout-list'>\r\n                        <li className='checkout-list-items'>Shipping - ${shippingCost.toFixed(2)}</li>\r\n                        <li className='checkout-list-items'>Taxes - ${taxes.toFixed(2)}</li>\r\n                        <li className='checkout-list-items'>Discount - $5.00 with code SKATE</li>\r\n                    </ul>  \r\n                    <h5>Total: {checkoutTotal.toFixed(2)}</h5>\r\n                </div>\r\n                \r\n                <div className='product-list'>\r\n                    <h3>Cart Summary</h3>\r\n                    <div className='scroll-list'>\r\n                        {cartItems.length >= 1 ? \r\n                            cartItems.map(p =>{\r\n                                return(\r\n                                    <ItemSummary key={p.brandId} item={p}/>\r\n                                )\r\n                            })\r\n                        : null}  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout;\r\n","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\ItemSummary.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\CheckoutForm.js",["171","172"],[],"import React from \"react\";\r\nimport { useState, useEffect} from \"react\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport { Button, Form, FormGroup, Input, Row, Col, Label} from 'reactstrap';\r\nimport '../Styles/CheckoutForm.css'\r\nimport '../Styles/Checkout.css'\r\nimport { shippingFormInfo, billingFormInfo } from '../Actions/Actions';\r\n\r\nfunction CheckoutForm(props){\r\n\r\n    \r\n\r\n    const dispatcher = useDispatch({});\r\n   \r\n    const[form, setForm] = useState({\r\n            firstName:'',\r\n            lastName:'',\r\n            streetAddress:'',\r\n            aptOrSuite:'',\r\n            city:'',\r\n            postCode:'',\r\n            state: '',\r\n            country:'',\r\n            email:''\r\n    });\r\n\r\n    const defaultForm = {\r\n            firstName:'',\r\n            lastName:'',\r\n            streetAddress:'',\r\n            aptOrSuite:'',\r\n            city:'',\r\n            postCode:'',\r\n            state: '',\r\n            country:'',\r\n            email:''\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n            updateProgressBar();\r\n            \r\n    },[form])\r\n\r\n\r\n     useEffect(() =>{\r\n        if(props.type === \"Billing\"){\r\n            if(props.formData){\r\n                console.log(\"Billing DATA SHOULD BE SET\");\r\n                setForm(props.formData);\r\n            } else{\r\n                setForm(defaultForm);\r\n            }\r\n        }\r\n        \r\n     },[props.formData])\r\n\r\n     \r\n    const handleFormChange = (type,e) =>{\r\n        e.preventDefault();\r\n        switch (type) {\r\n            case 'firstName':\r\n                setForm({...form, firstName: e.target.value});\r\n                break;\r\n            case 'lastName':\r\n                setForm({...form, lastName: e.target.value});\r\n                break;\r\n            case 'streetAddress':\r\n                setForm({...form, streetAddress: e.target.value});\r\n                break;\r\n            case 'aptOrSuite':\r\n                setForm({...form, aptOrSuite: e.target.value});\r\n                break;\r\n            case 'city':\r\n                setForm({...form, city: e.target.value});\r\n                break;\r\n            case 'postCode':\r\n                setForm({...form, postCode: e.target.value});\r\n                break;\r\n            case 'state':\r\n                setForm({...form, state: e.target.value});\r\n                break;\r\n            case 'country':\r\n                setForm({...form, country: e.target.value});\r\n                break;\r\n            case 'email':\r\n                setForm({...form, email: e.target.value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    \r\n    }\r\n\r\n\r\n    const sendNextFormType = (e) =>{\r\n        e.preventDefault();\r\n        props.handleNextForm(props.type);\r\n    }\r\n\r\n\r\n    const validateForm = () => {\r\n        if(props.type === \"Customer\"){\r\n            \r\n            if(form.firstName.length >= 1 && form.lastName.length >= 1 && form.streetAddress.length >=1 \r\n            && form.country.length >=1 && form.state.length >=1 && form.email.length >= 1 && form.city.length >= 1\r\n            && form.postCode.length >=1){\r\n                dispatcher(shippingFormInfo(form));\r\n                return true;\r\n            }\r\n\r\n        }\r\n        if(props.type === \"Billing\"){\r\n            if(form.firstName.length >= 1 && form.lastName.length >= 1 && form.streetAddress.length >=1 \r\n                && form.country.length >=1 && form.state.length >=1  && form.city.length >= 1\r\n                && form.postCode.length >=1){\r\n                    dispatcher(billingFormInfo(form));\r\n                    return true;\r\n                }\r\n        }\r\n            \r\n\r\n            return false;\r\n    }\r\n\r\n    const updateProgressBar = () =>{\r\n        props.handleProgressBar(props.type, validateForm());\r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        <div style={{display:'flex',justifyContent:'center',width:'100%'}}>\r\n            <Form className='form'>\r\n                    <h2 style={{alignSelf:'flex-start', marginBottom:'5%'}}>{props.type} Information</h2>\r\n                    { !props.formData ? \r\n                        <FormGroup>\r\n                            <Label>Same as shipping?</Label>\r\n                            <Input id='same-as-shipping'type='checkbox'></Input>\r\n                        </FormGroup>\r\n                    : null}\r\n                    <Row style={{textAlign:'left'}}>\r\n                        <Col md={props.type === \"Billing\" ? 6 : 4}>\r\n                            <FormGroup >\r\n                                <Label for='fname'>First Name</Label>\r\n                                <Input id=\"fname\" type=\"text\" value={form.firstName} onChange={(e) => handleFormChange('firstName', e)} placeholder=\"First Name\"></Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={props.type === \"Billing\" ? 6 : 4}>\r\n                            <FormGroup >\r\n                                <Label for='fname'>Last Name</Label>\r\n                                <Input id=\"lname\" type=\"text\" value={form.lastName} onChange={(e) => handleFormChange('lastName',e)} placeholder=\"Last Name\"></Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        {props.type === 'Billing' ? null : \r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label for='fname'>Email</Label>\r\n                                <Input id=\"email\" type=\"text\" value={form.email} onChange={(e) => handleFormChange('email',e)} placeholder=\"Email\"></Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        }\r\n                    </Row>\r\n                    <Row style={{textAlign:'left'}}>\r\n                        <Col md={8}>\r\n                            <FormGroup>\r\n                                <Label for='fname'>Street Address</Label>\r\n                                <Input id=\"street-address\" type=\"text\" value={form.streetAddress} onChange={(e) => handleFormChange('streetAddress',e)} placeholder='Street Address'></Input>\r\n                            </FormGroup>  \r\n                        </Col>\r\n                        <Col md={4}>\r\n                        <FormGroup>\r\n                                <Label for='fname'>Country</Label>\r\n                                <Input id=\"country\" type=\"text\" value={form.country} onChange={(e) => handleFormChange('country',e)} placeholder='Country'></Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{textAlign:'left'}}>\r\n                        <Col >\r\n                            <FormGroup>\r\n                                <Label for='fname'>Apt/Suite{'(Optional)'}</Label>\r\n                                <Input id=\"apt-num\" type=\"number\" value={form.aptOrSuite} onChange={(e) => handleFormChange('aptOrSuite',e)} placeholder=\"Apt/Suite/(Optional)\"></Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        \r\n                        </Row>\r\n                    <Row style={{textAlign:'left'}}>\r\n                    <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label for='fname'>City</Label>\r\n                                <Input id=\"city\" type=\"text\" value={form.city} onChange={(e) => handleFormChange('city',e)} placeholder='City'></Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label for='fname'>State</Label>\r\n                                <Input id=\"state\" type=\"text\" value={form.state} onChange={(e) => handleFormChange('state',e)} placeholder='State'></Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                        <FormGroup >\r\n                            <Label for='fname'>Postal Code</Label>\r\n                            <Input id=\"post-code\" type=\"text\" value={form.postCode} onChange={(e) => handleFormChange('postCode',e)} placeholder='Postal Code'></Input>\r\n                        </FormGroup>\r\n                        </Col>\r\n                        {props.type === \"Customer\" ? \r\n                        <Col md={4}>\r\n                            <FormGroup style={{display:'flex', gap:'5%', alignItems:'center'}}>\r\n                                Same as billing?\r\n                                <Input disabled={!validateForm()}id=\"billing-check\" type=\"checkbox\" onChange={props.handleCheckBillSame}>Same as billing?</Input>\r\n                            </FormGroup>\r\n                        </Col>    \r\n                            : null}\r\n                        <Col md={12}>\r\n                            <FormGroup style={{display:'flex', gap:'5%', alignItems:'center'}}>\r\n                                <Button disabled={!validateForm()}  onClick={e =>sendNextFormType(e)}>Next</Button>\r\n                            </FormGroup>\r\n                        </Col>    \r\n                    </Row>\r\n                </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutForm;","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\PaymentForm.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\CheckoutFormReducer.js",["173"],[],"import React from \"react\";\r\n\r\nconst  CheckoutFormReducer = (formState={shipping : {}, billing: {}, payment: {}},action) =>{\r\n    console.log('INSIDE CHECKOUTFROM REDUCER');\r\n    switch (action.type) {\r\n        \r\n        case 'SHIPPING_FORM_DATA':\r\n            let newShipping = {...formState, shipping: action.data}\r\n            return newShipping;\r\n        case 'BILLING_FROM_DATA':\r\n            let newBilling = {...formState, billing: action.data}\r\n            return newBilling;\r\n        case 'PAYMENT_DATA':\r\n            let newPayment = {...formState, payment: action.data}\r\n            return newPayment;\r\n        default:\r\n           return formState;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CheckoutFormReducer;","C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\Login.js",["174"],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Reducers\\AuthReducer.js",[],[],"C:\\Users\\shane\\Documents\\SkateEcom\\skate-ecom-front-end\\skate-ecom-front-end\\skate-ecom-master\\src\\Components\\UserProfile.js",[],[],{"ruleId":"175","severity":1,"message":"176","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":12},{"ruleId":"179","severity":1,"message":"180","line":26,"column":5,"nodeType":"181","endLine":26,"endColumn":7,"suggestions":"182"},{"ruleId":"175","severity":1,"message":"183","line":2,"column":25,"nodeType":"177","messageId":"178","endLine":2,"endColumn":35},{"ruleId":"175","severity":1,"message":"184","line":2,"column":37,"nodeType":"177","messageId":"178","endLine":2,"endColumn":52},{"ruleId":"175","severity":1,"message":"185","line":5,"column":10,"nodeType":"177","messageId":"178","endLine":5,"endColumn":21},{"ruleId":"175","severity":1,"message":"186","line":8,"column":24,"nodeType":"177","messageId":"178","endLine":8,"endColumn":38},{"ruleId":"175","severity":1,"message":"187","line":10,"column":10,"nodeType":"177","messageId":"178","endLine":10,"endColumn":15},{"ruleId":"175","severity":1,"message":"188","line":13,"column":11,"nodeType":"177","messageId":"178","endLine":13,"endColumn":17},{"ruleId":"175","severity":1,"message":"189","line":13,"column":19,"nodeType":"177","messageId":"178","endLine":13,"endColumn":28},{"ruleId":"179","severity":1,"message":"180","line":23,"column":7,"nodeType":"181","endLine":23,"endColumn":9,"suggestions":"190"},{"ruleId":"179","severity":1,"message":"191","line":33,"column":7,"nodeType":"181","endLine":33,"endColumn":20,"suggestions":"192"},{"ruleId":"175","severity":1,"message":"193","line":10,"column":11,"nodeType":"177","messageId":"178","endLine":10,"endColumn":23},{"ruleId":"175","severity":1,"message":"194","line":11,"column":11,"nodeType":"177","messageId":"178","endLine":11,"endColumn":17},{"ruleId":"175","severity":1,"message":"195","line":6,"column":10,"nodeType":"177","messageId":"178","endLine":6,"endColumn":14},{"ruleId":"175","severity":1,"message":"196","line":11,"column":26,"nodeType":"177","messageId":"178","endLine":11,"endColumn":42},{"ruleId":"175","severity":1,"message":"197","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":16},{"ruleId":"175","severity":1,"message":"198","line":5,"column":9,"nodeType":"177","messageId":"178","endLine":5,"endColumn":18},{"ruleId":"175","severity":1,"message":"199","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":13},{"ruleId":"175","severity":1,"message":"200","line":8,"column":10,"nodeType":"177","messageId":"178","endLine":8,"endColumn":18},{"ruleId":"175","severity":1,"message":"201","line":12,"column":11,"nodeType":"177","messageId":"178","endLine":12,"endColumn":19},{"ruleId":"175","severity":1,"message":"202","line":55,"column":11,"nodeType":"177","messageId":"178","endLine":55,"endColumn":25},{"ruleId":"175","severity":1,"message":"203","line":56,"column":13,"nodeType":"177","messageId":"178","endLine":56,"endColumn":18},{"ruleId":"179","severity":1,"message":"204","line":94,"column":7,"nodeType":"181","endLine":94,"endColumn":18,"suggestions":"205"},{"ruleId":"179","severity":1,"message":"206","line":98,"column":7,"nodeType":"181","endLine":98,"endColumn":33,"suggestions":"207"},{"ruleId":"179","severity":1,"message":"208","line":43,"column":7,"nodeType":"181","endLine":43,"endColumn":13,"suggestions":"209"},{"ruleId":"179","severity":1,"message":"210","line":56,"column":8,"nodeType":"181","endLine":56,"endColumn":24,"suggestions":"211"},{"ruleId":"175","severity":1,"message":"212","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":13},{"ruleId":"175","severity":1,"message":"213","line":16,"column":21,"nodeType":"177","messageId":"178","endLine":16,"endColumn":32},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["214"],"'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'useDispatch' is defined but never used.","'setCardDetails' is assigned a value but never used.","'icons' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.",["215"],"React Hook useEffect has a missing dependency: 'serverUrl'. Either include it or remove the dependency array.",["216"],"'dropdownOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'Link' is defined but never used.","'setDropDownItems' is assigned a value but never used.","'Button' is defined but never used.","'addToCart' is defined but never used.","'PopUp' is defined but never used.","'useState' is defined but never used.","'dispatch' is assigned a value but never used.","'handleBackForm' is assigned a value but never used.","'forms' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'total'. Either include it or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'updateTotalAtCheckout'. Either include it or remove the dependency array.",["218"],"React Hook useEffect has a missing dependency: 'updateProgressBar'. Either include it or remove the dependency array.",["219"],"React Hook useEffect has missing dependencies: 'defaultForm' and 'props.type'. Either include them or remove the dependency array.",["220"],"'React' is defined but never used.","'setDisabled' is assigned a value but never used.",{"desc":"221","fix":"222"},{"desc":"221","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [dispatch]",{"range":"234","text":"235"},{"range":"236","text":"235"},"Update the dependencies array to be: [params.type, serverUrl]",{"range":"237","text":"238"},"Update the dependencies array to be: [cartItems, total]",{"range":"239","text":"240"},"Update the dependencies array to be: [total, taxes, shippingCost, updateTotalAtCheckout]",{"range":"241","text":"242"},"Update the dependencies array to be: [form, updateProgressBar]",{"range":"243","text":"244"},"Update the dependencies array to be: [defaultForm, props.formData, props.type]",{"range":"245","text":"246"},[820,822],"[dispatch]",[786,788],[1026,1039],"[params.type, serverUrl]",[3020,3031],"[cartItems, total]",[3098,3124],"[total, taxes, shippingCost, updateTotalAtCheckout]",[1052,1058],"[form, updateProgressBar]",[1365,1381],"[defaultForm, props.formData, props.type]"]